@prefix : <https://eyereasoner.github.io/see-lingua/lingua/acp.trig#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.

:test :for :PolicyX.
:test :is true.

:acp_rule1 lingua:body _:gn_1.
:acp_rule1 lingua:headback _:node_1_1.
:acp_rule1 lingua:bindings ((var:Test :test1) (var:Pol :PolicyX) (var:Field var:U_0) (var:X ((<https://eyereasoner.github.io/see-lingua/lingua/acp.trig>) 1))).
:acp_rule2 lingua:body _:gn_2.
:acp_rule2 lingua:headback _:node_7_1.
:acp_rule2 lingua:bindings ((var:Test :test1) (var:Pol :PolicyX) (var:Field var:U_1) (var:List (:C)) (var:X ((<https://eyereasoner.github.io/see-lingua/lingua/acp.trig>) 1)) (var:L 1)).
:acp_rule3 lingua:body _:gn_3.
:acp_rule3 lingua:headback _:node_13_1.
:acp_rule3 lingua:bindings ((var:Test :test1) (var:Pol :PolicyX) (var:Field var:U_2) (var:List ()) (var:X ((<https://eyereasoner.github.io/see-lingua/lingua/acp.trig>) 1)) (var:L 0)).
:acp_query lingua:question _:node_19_1.
:acp_query lingua:answer _:node_20_1.
:acp_query lingua:bindings ((var:Pol :PolicyX)).
_:gn_1 {
    var:Test :policy var:Pol.
    var:Pol a :Policy.
    (_:node_4_1 _:node_6_1) log:forAllIn var:X.
}
_:node_1_1 {
    var:Pol :pass :allOfTest.
}
_:gn_2 {
    var:Test :policy var:Pol.
    var:Pol a :Policy.
    (var:Field _:node_11_1 var:List) log:collectAllIn var:X.
    var:List list:length var:L.
    var:L log:notEqualTo 0.
}
_:node_7_1 {
    var:Pol :pass :anyOfTest.
}
_:gn_3 {
    var:Test :policy var:Pol.
    var:Pol a :Policy.
    (var:Field _:node_17_1 var:List) log:collectAllIn var:X.
    var:List list:length var:L.
    var:L log:equalTo 0.
}
_:node_13_1 {
    var:Pol :pass :noneOfTest.
}
_:node_19_1 {
    var:Pol a :Policy.
    var:Pol :pass :allOfTest.
    var:Pol :pass :anyOfTest.
    var:Pol :pass :noneOfTest.
}
_:node_20_1 {
    :test :for var:Pol.
    :test :is true.
}
_:node_4_1 {
    var:Pol :allOf var:Field.
}
_:node_6_1 {
    var:Test :has var:Field.
}
_:node_11_1 {
    var:Pol :anyOf var:Field.
    var:Test :has var:Field.
}
_:node_17_1 {
    var:Pol :noneOf var:Field.
    var:Test :has var:Field.
}
